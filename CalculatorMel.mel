proc float Addition(float $num[])
{
float $num[] ; 
float $sum =  $num[0] ; 
      for ($i = 1; $i < size($num) ; $i++)
{
              $sum = $sum + $num[$i] ; 

}
return $sum ; 
}

int $answer ; 
$answer = Addition({3, 4, 5}) ; 



proc float Subtraction(float $num[])
{
float $num[] ; 
float $sum =  $num[0] ; 
       for ($i = 1; $i < size($num) ; $i++)
{
             $sum = $sum - $num[$i] ; 
}
return $sum ; 
}

int $answer ; 
$answer = Subtraction({7, 9, 6}) ; 


proc float Division(float $num[])
{
float $num[] ; 
float $sum =  $num[0] ; 
      for ($i = 1; $i < size($num) ; $i++)
{
          $sum = $sum / $num[$i] ; 
}
return $sum ; 
}

int $answer ; 
$answer = Division({9, 4, 5}) ; 



proc float Multiplication(float $num[])
{
float $num[] ; 
float $sum =  $num[0] ; 
     for ($i = 1; $i < size($num) ; $i++)
{
          $sum = $sum * $num[$i] ; 
}
return $sum ; 
}

int $answer ; 
$answer = Multiplication({3, 4, 5, 6, 10, 15}) ; 


proc float Mean(float $num[])
{
float $num[] ; 
float $sum =  $num[0] ; 
     for ($i = 1; $i < size($num) ; $i++)
{
          $sum = $sum + $num[$i] ; 
}
$sum = $sum / size($num) ; 
return $sum ; 
}

int $answer ; 
$answer = Mean({17, 4, 6, 10, 7}) ; 


proc float Middle(float $num[])
{
float $num[] ; 
float $numGroup[] = `sort $num[]` ; 
float $sum = (size($num))/2 ; 
int $median = $numGroup[$sum] ; 
return $median ; 
}
}

int $answer ; 
$answer = Middle({1, 2, 3}) ; 



proc float Power(float $num, float $exponent)
{
float $total = $num ; 
      for ($i = 1 ; $i < $exponent ; $i++)
{
          $total = $total * $num ; 
} 
return $total ; 
}

int $answer ; 
$answer = Power(2, 2) ;
